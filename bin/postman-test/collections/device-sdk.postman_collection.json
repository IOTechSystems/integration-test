{
	"info": {
		"_postman_id": "ada3182d-bf4d-4eab-8b55-762c7ddbf6aa",
		"name": "device-sdk",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "check device-sdk registered itself as a device service",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "932d2b4e-d44b-473c-bc7d-565cd47fe239",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type is application/json\", function(){",
							"    var contentType = postman.getResponseHeader(\"Content-Type\");",
							"    pm.expect(contentType).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{metaDataUrl}}/api/v1/deviceservice/name/edgex-device-sdk",
					"host": [
						"{{metaDataUrl}}"
					],
					"path": [
						"api",
						"v1",
						"deviceservice",
						"name",
						"edgex-device-sdk"
					]
				},
				"description": "given core-metadata and device-sdk started up\nwhen device-sdk initialized successfully\nthen device-sdk registered itself as a device service"
			},
			"response": []
		},
		{
			"name": "create a device profile for device-sdk",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b7fbafb-ac2f-4efc-bee2-6f97176bbd8f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type is text/plain\", function(){",
							"    var contentType = postman.getResponseHeader(\"Content-Type\");",
							"    pm.expect(contentType).to.include(\"text/plain\");",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"description\":\"BACnet Honeywell thermostats\",\"name\":\"device-sdk-thermostat-profile\",\"manufacturer\":\"Honeywell\",\"model\":\"ABC123\",\"labels\":[\"bacnet\",\"thermostat\",\"Honeywell\"],\"objects\":null,\"deviceResources\":[{\"description\":\"Cooling Point\",\"name\":\"coolingpoint\",\"tag\":null,\"properties\":{\"value\":{\"type\":\"INT64\",\"readWrite\":\"RW\",\"minimum\":\"0\",\"maximum\":\"1000\",\"defaultValue\":\"0\",\"size\":\"1\",\"word\":\"2\",\"lsb\":null,\"mask\":\"0x00\",\"shift\":\"0\",\"scale\":\"1\",\"offset\":\"0.0\",\"base\":\"0\",\"assertion\":null,\"signed\":true,\"precision\":null},\"units\":{\"type\":\"String\",\"readWrite\":\"R\",\"defaultValue\":\"degree\"}},\"attributes\":null}],\"resources\":[{\"name\":\"coolingpoint\",\"get\":[{\"index\":\"1\",\"operation\":\"get\",\"object\":\"coolingpoint\",\"property\":\"value\",\"parameter\":\"coolingpoint\",\"resource\":null,\"secondary\":[],\"mappings\":{}}],\"set\":[{\"index\":\"2\",\"operation\":\"set\",\"object\":\"coolingpoint\",\"property\":\"value\",\"parameter\":\"coolingpoint\",\"resource\":null,\"secondary\":[],\"mappings\":{}}]}],\"commands\":[{\"name\":\"coolingpoint\",\"get\":{\"path\":\"/api/v1/device/{deviceId}/coolingpoint\",\"responses\":[{\"code\":\"200\",\"description\":\"not a float\",\"expectedValues\":[\"coolingpoint\"]}]},\"put\":{\"path\":\"/api/v1/device/{deviceId}/coolingpoint\",\"responses\":[{\"code\":\"200\",\"description\":\"not a float\",\"expectedValues\":[\"coolingpoint\"]}],\"parameterNames\":[\"coolingpoint\"]}}]}"
				},
				"url": {
					"raw": "{{metaDataUrl}}/api/v1/deviceprofile",
					"host": [
						"{{metaDataUrl}}"
					],
					"path": [
						"api",
						"v1",
						"deviceprofile"
					]
				}
			},
			"response": []
		},
		{
			"name": "create an addressable for device-sdk",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8f052a6-5691-49c4-a712-b1365404fa99",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type is text/plain\", function(){",
							"    var contentType = postman.getResponseHeader(\"Content-Type\");",
							"    pm.expect(contentType).to.include(\"text/plain\");",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"device-sdk-sample-address\",\"protocol\":\"HTTP\",\"address\":\"192.168.1.1\",\"port\":502,\"path\":\"\",\"publisher\":\"none\",\"user\":\"none\",\"password\":\"none\",\"topic\":\"none\"}"
				},
				"url": {
					"raw": "{{metaDataUrl}}/api/v1/addressable",
					"host": [
						"{{metaDataUrl}}"
					],
					"path": [
						"api",
						"v1",
						"addressable"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a device tied to device-sdk to test callback",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e4116d2d-c1ff-4bab-99df-e94a2726e9bf",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type is text/plain\", function(){",
							"    var contentType = postman.getResponseHeader(\"Content-Type\");",
							"    pm.expect(contentType).to.include(\"text/plain\");",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"});",
							"",
							"pm.environment.set(\"device_id\", pm.response.text());",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"device-sdk-sample\",\"description\":\"created for test\",\"adminState\":\"UNLOCKED\",\"operatingState\":\"ENABLED\",\"addressable\":{\"name\":\"device-sdk-sample-address\"},\"labels\":[\"modbus\",\"smart-meter\"],\"service\":{\"name\":\"edgex-device-sdk\"},\"profile\":{\"name\":\"device-sdk-thermostat-profile\"}}"
				},
				"url": {
					"raw": "{{metaDataUrl}}/api/v1/device",
					"host": [
						"{{metaDataUrl}}"
					],
					"path": [
						"api",
						"v1",
						"device"
					]
				}
			},
			"response": []
		},
		{
			"name": "check the get command works",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59adeb23-62cb-473c-9aa7-9b711686c860",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    if(responseCode.code !== 200){",
							"        console.log(pm.response.text());",
							"    }",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type is application/json\", function(){",
							"    var contentType = postman.getResponseHeader(\"Content-Type\");",
							"    pm.expect(contentType).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{deviceSDKUrl}}/api/v1/device/{{device_id}}/coolingpoint",
					"host": [
						"{{deviceSDKUrl}}"
					],
					"path": [
						"api",
						"v1",
						"device",
						"{{device_id}}",
						"coolingpoint"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete the device tied to device-sdk to test callback",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "415f0a2f-1f00-4a1c-a710-43a9d1b680a4",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.withBody;",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{metaDataUrl}}/api/v1/device/id/{{device_id}}",
					"host": [
						"{{metaDataUrl}}"
					],
					"path": [
						"api",
						"v1",
						"device",
						"id",
						"{{device_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check the get command from the deleted device returns 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "278c89bb-4bd5-45f9-9cf8-3136fba6cc90",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 400ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(400);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{deviceSDKUrl}}/api/v1/device/{{device_id}}/coolingpoint",
					"host": [
						"{{deviceSDKUrl}}"
					],
					"path": [
						"api",
						"v1",
						"device",
						"{{device_id}}",
						"coolingpoint"
					]
				}
			},
			"response": []
		}
	]
}